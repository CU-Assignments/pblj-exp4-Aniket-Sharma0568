import java.util.*;

class Card {
    char symbol;
    int number;

    // Constructor for Card class
    public Card(char symbol, int number) {
        this.symbol = symbol;
        this.number = number;
    }

    @Override
    public String toString() {
        return symbol + " " + number;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) return true;
        if (obj == null || getClass() != obj.getClass()) return false;
        Card card = (Card) obj;
        return symbol == card.symbol;
    }

    @Override
    public int hashCode() {
        return Objects.hash(symbol);
    }
}

public class Card_Game {
    public static void main(String[] args) {
        Set<Card> cardSet = new LinkedHashSet<>(); // To store unique cards in the order they are added
        Scanner sc = new Scanner(System.in);

        // Collecting 8 cards
        for (int i = 1; i <= 8; i++) {
            System.out.println("Enter a card ");
            char symbol = sc.next().charAt(0);
            int number = sc.nextInt();

            // Create a new card and add it to the set
            cardSet.add(new Card(symbol, number));

            // Check if we have all 4 symbols
            Set<Character> uniqueSymbols = new HashSet<>();
            for (Card card : cardSet) {
                uniqueSymbols.add(card.symbol);
            }

            // If we have collected all 4 unique symbols, break the loop
            if (uniqueSymbols.size() == 4) {
                break;
            }
        }

        // Print the result
        System.out.println("Four symbols gathered in " + cardSet.size() + " cards.");
        System.out.println("Cards in Set are : ");
        
        // Sort the cards by symbol in alphabetical order
        cardSet.stream()
               .sorted(Comparator.comparing(card -> Character.toString(card.symbol)))
               .forEach(System.out::println);
    }
}
